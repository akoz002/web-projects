{"version":3,"sources":["utils/palindrome.js","index.js"],"names":["_isPalindrome","str","length","endsWith","charAt","slice","palindrome","toLowerCase","match","join","window","console","log"],"mappings":";AA4BC,aAvBD,SAASA,EAAcC,GACjBA,OAAAA,EAAIC,QAAU,KAIdD,EAAIE,SAASF,EAAIG,OAAO,KACnBJ,EAAcC,EAAII,MAAM,GAAI,IAYxB,SAASC,EAAWL,GAI1BD,OAAAA,EAHOC,EAAIM,cAAcC,MAAM,cACZC,KAAK,KAGhC,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACVD,aAEA,IAAA,EAAA,EAAA,QAAA,uBAqBwD,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAnBxDC,OAAOJ,WAAaA,EAApB,QAIAK,QAAQC,IAAI,yBAA0B,EAAW,EAAA,SAAA,QAEjDD,QAAQC,IAAI,6BAA8B,EAAW,EAAA,SAAA,YACrDD,QAAQC,IAAI,6BAA8B,EAAW,EAAA,SAAA,YACrDD,QAAQC,IAAI,8BAA+B,EAAW,EAAA,SAAA,aAEtDD,QAAQC,IAAI,6BAA8B,EAAW,EAAA,SAAA,YACrDD,QAAQC,IAAI,6BAA8B,EAAW,EAAA,SAAA,YACrDD,QAAQC,IAAI,+BAAgC,EAAW,EAAA,SAAA,cAEvDD,QAAQC,IAAI,MACZD,QAAQC,IAAI,8BAA+B,EAAW,EAAA,SAAA,aACtDD,QAAQC,IAAI,8BAA+B,EAAW,EAAA,SAAA,aACtDD,QAAQC,IAAI,0BAA2B,EAAW,EAAA,SAAA,SAClDD,QAAQC,IAAI,yBAA0B,EAAW,EAAA,SAAA,QACjDD,QAAQC,IAAI,wBAAyB,EAAW,EAAA,SAAA","file":"src.01cf8a14.js","sourceRoot":"../src","sourcesContent":["\n/*\n * Helper function to recursively check whether a string is a palindrome.\n */\n\nfunction _isPalindrome(str) {\n  if (str.length <= 1) {\n    return true;\n  }\n\n  if (str.endsWith(str.charAt(0))) {\n    return _isPalindrome(str.slice(1, -1));\n  }\n\n  return false;\n}\n\n/*\n * Check if the given unfiltered input string is a palindrome.\n * @param {string} str The unfiltered input string.\n * @return {boolean} true if the given string is a palindrome, false otheriwse.\n */\n\nexport default function palindrome(str) {\n  const chars = str.toLowerCase().match(/[a-z0-9]+/g);\n  const filteredStr = chars.join(\"\");\n\n  return _isPalindrome(filteredStr);\n}\n","\n/*\n * freeCodeCamp JavaScript Algorithms and Data Structures Certification\n * Project 1: Palindrome Checker\n * Alex Kozlov, 2019\n *\n * A palindrome is a word or sentence that's spelled the same way both\n * forward and backward, ignoring punctuation, case and spacing.\n *\n * The input string must be filtered to remove all non-alphanumeric\n * characters (punctuation, spaces and symbols). The palindrome check\n * must be case-insensitive.\n *\n * Example input strings include:\n *   \"racecar\", \"RaceCar\", \"race CAR\"\n *   \"2A3*3a2\", \"2A3 3a2\", \"2_A3*3#A2\"\n */\n\n\"use strict\";\n\nimport palindrome from './utils/palindrome';\n\nwindow.palindrome = palindrome;\n\n/***  Usage Examples  ***/\n\nconsole.log('palindrome(\"eye\") => ' + palindrome(\"eye\")); // true\n\nconsole.log('palindrome(\"racecar\") => ' + palindrome(\"racecar\")); // true\nconsole.log('palindrome(\"RaceCar\") => ' + palindrome(\"RaceCar\")); // true\nconsole.log('palindrome(\"race CAR\") => ' + palindrome(\"race CAR\")); // true\n\nconsole.log('palindrome(\"2A3*3a2\") => ' + palindrome(\"2A3*3a2\")); // true\nconsole.log('palindrome(\"2A3 3a2\") => ' + palindrome(\"2A3 3a2\")); // true\nconsole.log('palindrome(\"2_A3*3#A2\") => ' + palindrome(\"2_A3*3#A2\")); // true\n\nconsole.log('\\n');\nconsole.log('palindrome(\"blizzard\") => ' + palindrome(\"blizzard\")); // false\nconsole.log('palindrome(\"fireball\") => ' + palindrome(\"fireball\")); // false\nconsole.log('palindrome(\"wind\") => ' + palindrome(\"wind\")); // false\nconsole.log('palindrome(\"ice\") => ' + palindrome(\"ice\")); // false\nconsole.log('palindrome(\"no\") => ' + palindrome(\"no\")); // false\n"]}