{"version":3,"sources":["utils/rot13.js","index.js"],"names":["rot13","str","chars","split","minCharCode","charCodeAt","maxCharCode","decodedChars","map","char","match","decodedCharCode","String","fromCharCode","join","printRot13","console","log","window"],"mappings":";AAyBC,aAlBc,SAASA,EAAMC,GACtBC,IAAAA,EAAQD,EAAIE,MAAM,IAElBC,EAAc,IAAIC,aAClBC,EAAc,IAAID,aAajBE,OAXcL,EAAMM,IAAI,SAAAC,GACzBA,GAAAA,EAAKC,MAAM,SAAU,CACnBC,IAAAA,EAAkBF,EAAKJ,aANX,GAUTO,OAHHD,EAAkBL,IACpBK,EAAkBA,EAAkBL,EAAc,EAAIF,GAEjDQ,OAAOC,aAAaF,GAEtBF,OAAAA,IAGWK,KAAK,IAC1B,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACVD,aAEA,IAAA,EAAA,EAAA,QAAA,kBAcA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GARA,SAASC,EAAWd,GAClBe,QAAQC,IAAI,SAAShB,OAAAA,EAAa,UAAA,EAAMA,EAAAA,SAAAA,IAL1CiB,OAAOlB,MAAQA,EAAf,QAQAe,EAAW,eACXA,EAAW,kBACXA,EAAW,eACXA,EAAW,cACXA,EAAW","file":"src.892dd952.js","sourceRoot":"../src","sourcesContent":["\n/*\n * Decode a ROT13 cipher encoded string.\n * @param {string} str ROT13 cipher encoded string.\n * @return {string} The decoded string.\n */\n\nexport default function rot13(str) {\n  const chars = str.split(\"\");\n  const shiftAmount = 13;\n  const minCharCode = \"A\".charCodeAt();\n  const maxCharCode = \"Z\".charCodeAt();\n\n  const decodedChars = chars.map(char => {\n    if (char.match(/[A-Z]/)) {\n      let decodedCharCode = char.charCodeAt() + shiftAmount;\n      if (decodedCharCode > maxCharCode) {\n        decodedCharCode = decodedCharCode - maxCharCode - 1 + minCharCode;\n      }\n      return String.fromCharCode(decodedCharCode);\n    }\n    return char;\n  });\n\n  return decodedChars.join(\"\");\n}\n","/*\n * freeCodeCamp JavaScript Algorithms and Data Structures Certification\n * Project 3: Caesars Cipher\n * Alex Kozlov, 2019\n *\n * In Caesars Cipher, also known as Shift Cipher, the meanings of the letters\n * are shifted by a set amount. This program implements the ROT13 cipher where\n * the letters are shifted by 13 places. E.g. 'A' becomes 'N', 'B' becomes 'O',\n * etc.\n *\n * The program accepts a ROT13 encoded string and returns a decoded string. All\n * letters are assumed to be upper-case. Non-alphabetic characters are not\n * decoded but are included in the output string as they are.\n */\n\n\"use strict\";\n\nimport rot13 from './utils/rot13';\n\nwindow.rot13 = rot13;\n\n/***  Usage Examples  ***/\n\nfunction printRot13(str) {\n  console.log(`rot13(${str}) => ` + rot13(str));\n}\n\nprintRot13(\"LBH QVQ VG!\");\nprintRot13(\"SERR PBQR PNZC\");\nprintRot13(\"SERR CVMMN!\");\nprintRot13(\"SERR YBIR?\");\nprintRot13(\"GUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT.\");\n"]}